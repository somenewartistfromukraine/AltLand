{
  "version": 3,
  "sources": ["../../geomagnetism/lib/coords/cartesian.js", "../../geomagnetism/lib/legendre.js", "../../geomagnetism/lib/coords/spherical.js", "../../geomagnetism/lib/ellipsoid.js", "../../geomagnetism/lib/coords/geodetic.js", "../../geomagnetism/lib/magnetic_elements.js", "../../geomagnetism/lib/magnetic_vector.js", "../../geomagnetism/lib/model.js", "../../geomagnetism/data/wmm-2025.json", "../../geomagnetism/data/wmm-2020.json", "../../geomagnetism/data/wmm-2015v2.json", "../../geomagnetism/data/wmm-2015.json", "../../geomagnetism/index.js"],
  "sourcesContent": ["var GeodeticCoord = require('./geodetic.js');\n\nmodule.exports = CartesianCoord;\n\nfunction CartesianCoord(options){\n\tthis.x = options.x;\n\tthis.y = options.y;\n\tthis.z = options.z; \n}\n\nCartesianCoord.prototype.toGeodetic = function(ellipsoid){\n\tvar modified_b = this.z < 0 ? -ellipsoid.b : ellipsoid.b;\n\tvar x = this.x; \n\tvar y = this.y;\n\tvar z = this.z;\n\tvar r = Math.sqr(x*x + y*y);\n\tvar e = (modified_b*z - (ellipsoid.a*ellipsoid.a - modified_b*modified_b)) / (ellipsoid.a*r);\n\tvar f = (modified_b*z + (ellipsoid.a*ellipsoid.a - modified_b*modified_b)) / (ellipsoid.a*r);\n\tvar p = (4/3) * (e*f+1);\n\tvar q = 2 * (e*e + f*f);\n\tvar d = p*p*p + q*q;\n\tvar v; \n\tif(d > 0) {\n\t\tv = Math.pow(Math.sqrt(d) - q, 1/3) - Math.pow(Math.sqrt(d) + q, 1/3);\t\t\n\t} else {\n\t\tv = 2 * Math.sqrt(-p) * Math.cos(Math.acos(q / (p * Math.sqrt(-p)) ) / 3);\n\t}\n\tif(v*v < Math.abs(p)) {\n\t\tv = -(v*v*v + 2*q) / 3*p;\n\t}\n\tvar g = (Math.sqrt(e*e + v) + e) / 2;\n\tvar t = Math.sqrt(g*g + (f - v*g)/(2*g - e)) - g;\n\tvar rlat = Math.atan( (ellipsoid.a*(1 - t*t)) / (2*modified_b*t) );\n\tvar zlong = Math.atan2(y, x);\n\tif(zlong < 0) zlong += 2*Math.PI;\n\tvar height_above_ellipsoid = (r - ellipsoid.a*t) * Math.cos(rlat) + (z - modified_b) * Math.sin(rlat);\n\tvar lambda = zlong * Math.PI/180;\n\tif(lambda > 180) lambda -= 360;\n\n\treturn new GeodeticCoord({\n\t\tlambda: lambda,\n\t\tphi: rlat * Math.PI/180,\n\t\theight_above_ellipsoid: height_above_ellipsoid,\n\t\tellipsoid: ellipsoid\n\t});\n};", "module.exports = LegendreFunction;\n\nfunction LegendreFunction(coord_spherical, n_max){\n\tvar sin_phi = Math.sin(Math.PI/180 * coord_spherical.phig);\n\tvar result;\n\tif(n_max <= 16 || (1 - Math.abs(sin_phi)) < 1e-10){\n\t\tresult = PcupLow(sin_phi, n_max);\n\t} else {\n\t\tresult = PcupHigh(sin_phi, n_max);\n\t}\n\tthis.pcup = result.pcup;\n\tthis.dpcup = result.dpcup;\n}\n\nfunction PcupLow(x, n_max){\n\tvar k, z, n, m, i, i1, i2, num_terms;\n\tvar schmidt_quasi_norm = [1.0];\n\tvar pcup = [1.0];\n\tvar dpcup = [0.0];\n\n\tz = Math.sqrt((1-x)*(1+x));\n\tnum_terms = (n_max+1) * (n_max+2) / 2;\n\n\n\tfor(n = 1; n <= n_max; n++) {\n\t\tfor(m = 0; m <= n; m++) {\n\t\t\ti = n*(n+1)/2 + m;\n\t\t\tif(n == m){\n\t\t\t\ti1 = (n-1)*n/2 + m - 1;\n\t\t\t\tpcup[i] = z*pcup[i1];\n\t\t\t\tdpcup[i] = z*dpcup[i1] + x*pcup[i1];\n\t\t\t} else if (n == 1 && m == 0) {\n\t\t\t\ti1 = (n-1)*n/2 + m;\n\t\t\t\tpcup[i] = x*pcup[i1];\n\t\t\t\tdpcup[i] = x*dpcup[i1] - z*pcup[i1];\n\t\t\t} else if (n > 1 && n != m) {\n\t\t\t\ti1 = (n-2)*(n-1)/2 + m;\n\t\t\t\ti2 = (n-1)*n/2 + m;\n\t\t\t\tif(m > n - 2){\n\t\t\t\t\tpcup[i] = x*pcup[i2];\n\t\t\t\t\tdpcup[i] = x*dpcup[i2] - z*pcup[i2];\n\t\t\t\t} else {\n\t\t\t\t\tk = ((n-1)*(n-1) - m*m) / ((2*n-1)*(2*n-3));\n\t\t\t\t\tpcup[i] = x*pcup[i2] - k*pcup[i1];\n\t\t\t\t\tdpcup[i] = x*dpcup[i2] - z*pcup[i2] - k*dpcup[i1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(n = 1; n <= n_max; n++) {\n\t\ti = n*(n+1)/2;\n\t\ti1 = (n-1)*n/2;\n\t\tschmidt_quasi_norm[i] = schmidt_quasi_norm[i1] * (2*n-1) / n;\n\t\tfor(m = 1; m <= n; m++){\n\t\t\ti = n*(n+1)/2 + m;\n\t\t\ti1 = n*(n+1)/2 + m - 1;\n\t\t\tschmidt_quasi_norm[i] = schmidt_quasi_norm[i1] * Math.sqrt(((n - m + 1) * (m == 1 ? 2 : 1)) / (n + m));\n\t\t}\t\n\t}\n\n\tfor(n = 1; n <= n_max; n++) {\n\t\tfor(m = 0; m <= n; m++) {\n\t\t\ti = n*(n+1)/2+m;\n\t\t\tpcup[i] *= schmidt_quasi_norm[i];\n\t\t\tdpcup[i] *= -schmidt_quasi_norm[i];\n\t\t}\n\t}\n\n\treturn {\n\t\tpcup: pcup,\n\t\tdpcup: dpcup\n\t};\n}\n\nfunction PcupHigh(x, n_max){\n\tif(Math.abs(x) == 1.0){\n\t\tthrow new Error(\"Error in PcupHigh: derivative cannot be calculated at poles\");\n\t}\n\n\tvar n, m, k;\n\tvar num_terms = (n_max + 1) * (n_max + 2)/2;\n\tvar f1 = [];\n\tvar f2 = [];\n\tvar pre_sqr = [];\n\tvar scalef = 1.0e-280;\n\n\tfor(n = 0; n <= 2*n_max + 1; ++n){\n\t\tpre_sqr[n] = Math.sqrt(n);\n\t}\n\n\tk = 2;\n\tfor(n = 0; n <= n_max; n++){\n\t\tk++;\n\t\tf1[k] = (2*n - 1) / n;\n\t\tf2[k] = (n - 1) / n;\n\t\tfor(m = 1; m <= n - 2; m++){\n\t\t\tk++;\n\t\t\tf1[k] = (2*n - 1) / pre_sqr[n+m] / pre_sqr[n-m];\n\t\t\tf2[k] = pre_sqr[n-m-1] * pre_sqr[n+m-1] / pre_sqr[n+m] / pre_sqr[n-m];\n\t\t}\n\t\tk += 2;\n\t}\n\n\tvar z = Math.sqrt((1-x)*(1+x));\n\tvar plm;\n\tvar pm1 = x;\n\tvar pm2 = 1;\n\tvar pcup = [1.0, pm1];\n\tvar dpcup = [0.0, z];\n\tif(n_max == 0){\n\t\tthrow new Error(\"Error in PcupHigh: n_max must be greater than 0\");\n\t}\n\t\n\tk = 1;\n\tfor(n = 2; n <= n_max; n++)\n\t{\n\t\tk = k + n;\n\t\tplm = f1[k] * x * pm1 - f2[k] * pm2;\n\t\tpcup[k] = plm;\n\t\tdpcup[k] = n * (pm1 - x * plm) / z;\n\t\tpm2 = pm1;\n\t\tpm1 = plm;\n\t}\n\n\tvar pmm = pre_sqr[2] * scalef;\n\tvar rescalem = 1/scalef;\n\tvar kstart = 0;\n\n\tfor(var m = 1; m <= n_max - 1; ++m){\n\t\trescalem *= z;\n\n\t\t//calculate pcup(m,m)\n\t\tkstart = kstart + m + 1;\n\t\tpmm = pmm * pre_sqr[2*m+1] / pre_sqr[2*m];\n\t\tpcup[kstart] = pmm * rescalem / pre_sqr[2*m+1];\n\t\tdpcup[kstart] = -( m*x*pcup[kstart] /z );\n\t\tpm2 = pmm / pre_sqr[2*m + 1];\n\n\t\t//calculate pcup(m+1,m)\n\t\tk = kstart + m + 1;\n\t\tpm1 = x * pre_sqr[2*m+1] * pm2;\n\t\tpcup[k] = pm1*rescalem;\n\t\tdpcup[k] = (pm2*rescalem *pre_sqr[2*m+1] - x*(m+1)*pcup[k]) / z;\n\n\t\t//calculate pcup(n,m)\n\t\tfor(n = m + 2; n <= n_max; ++n){\n\t\t\tk = k + n;\n\t\t\tplm = x*f1[k]*pm1 - f2[k]*pm2;\n\t\t\tpcup[k] = plm*rescalem;\n\t\t\tdpcup[k] = (pre_sqr[n+m]*pre_sqr[n-m]*pm1*rescalem - n*x*pcup[k]) / z;\n\t\t\tpm2 = pm1;\n\t\t\tpm1 = plm;\n\t\t}\n\t}\n\n\t//calculate pcup(n_max,n_max)\n\trescalem = rescalem*z;\n\tkstart = kstart + m + 1;\n\tpmm = pmm / pre_sqr[2*n_max];\n\tpcup[kstart] = pmm * rescalem;\n\tdpcup[kstart] = -n_max * x * pcup[kstart] / z;\n\n\treturn {\n\t\tpcup: pcup,\n\t\tdpcup: dpcup\n\t};\n}\n", "var CartesianCoord = require('./cartesian.js');\nvar LegendreFunction = require('../legendre.js');\n\nmodule.exports = SphericalCoord;\n\nfunction SphericalCoord(options){\n\tthis.lambda = options.lambda; // longitude\n\tthis.phig = options.phig; // geocentric latitude\n\tthis.r = options.r; // distance from center of ellipsoid\n}\n\nSphericalCoord.prototype.toCartesian = function(){\n\tvar radphi = this.phig * Math.PI/180;\n\tvar radlambda = this.lambda * Math.PI/180;\n\treturn new CartesianCoord({\n\t\tx: this.r * cos(radphi) * cos(radlambda),\n\t\ty: this.r * cos(radphi) * sin(radlambda),\n\t\tz: this.r * sin(radphi)\n\t});\n};\n\nSphericalCoord.prototype.toGeodetic = function(ellipsoid){\n\treturn this.toCartesian().toGeodetic(ellipsoid);\n};\n\nSphericalCoord.prototype.getHarmonicVariables = function(ellipsoid, n_max){\n\tvar m, n;\n\tvar cos_lambda = Math.cos(Math.PI/180 * this.lambda);\n\tvar sin_lambda = Math.sin(Math.PI/180 * this.lambda);\n\n\tvar cos_mlambda = [1.0, cos_lambda];\n\tvar sin_mlambda = [0.0, sin_lambda];\n\tvar relative_radius_power = [\n\t\t(ellipsoid.re/this.r) * (ellipsoid.re/this.r)\n\t];\n\n\tfor(n = 1; n <= n_max; n++){\n\t\trelative_radius_power[n] = relative_radius_power[n-1] * (ellipsoid.re/this.r);\n\t}\n\tfor(m = 2; m <= n_max; m++){\n\t\tcos_mlambda[m] = cos_mlambda[m-1]*cos_lambda - sin_mlambda[m-1]*sin_lambda;\n\t\tsin_mlambda[m] = cos_mlambda[m-1]*sin_lambda + sin_mlambda[m-1]*cos_lambda;\n\t}\n\n\treturn {\n\t\trelative_radius_power: relative_radius_power,\n\t\tcos_mlambda: cos_mlambda,\n\t\tsin_mlambda: sin_mlambda\n\t};\n};\n\nSphericalCoord.prototype.getLegendreFunction = function(n_max) {\n\treturn new LegendreFunction(this, n_max);\n};", "module.exports = Ellipsoid;\n\nfunction Ellipsoid(options) {\n    options = options || {\n        a: 6378.137,\n        b: 6356.7523142,\n        fla: 1 / 298.257223563,\n        re: 6371.2\n    };\n\n    this.a = options.a; // semi-major axis\n    this.b = options.b; // semi-minor axis\n    this.fla = options.fla; // flattening\n    this.re = options.re; // mean radius\n    this.eps = Math.sqrt(1-(this.b*this.b)/(this.a*this.a)); // first eccentricity\n    this.epssq = this.eps*this.eps; // first eccentricity squared\n}", "var SphericalCoord = require('./spherical.js');\nvar Ellipsoid = require('../ellipsoid.js');\n\nmodule.exports = GeodeticCoord;\n\nfunction GeodeticCoord(options){\n\tthis.options = options;\n\tthis.lambda = options.lambda || options.lon; // longitude\n\tthis.phi = options.phi || options.lat; // geodetic latitude\n\tthis.height_above_ellipsoid = options.height_above_ellipsoid || 0;\n\tthis.ellipsoid = options.ellipsoid || new Ellipsoid();\n}\n\nGeodeticCoord.prototype.toSpherical = function() {\n\tvar ellipsoid = this.ellipsoid;\n\tvar coslat = Math.cos(this.phi*Math.PI/180);\n\tvar sinlat = Math.sin(this.phi*Math.PI/180);\n\tvar rc = ellipsoid.a / Math.sqrt(1 - ellipsoid.epssq * sinlat * sinlat);\n\tvar xp = (rc + this.height_above_ellipsoid) * coslat;\n\tvar zp = (rc * (1 - ellipsoid.epssq) + this.height_above_ellipsoid) * sinlat;\n\tvar r = Math.sqrt(xp*xp + zp*zp);\n\treturn new SphericalCoord({\n\t\tr: r,\n\t\tphig: 180/Math.PI*Math.asin(zp / r),\n\t\tlambda: this.lambda\n\t});\n};\n\nGeodeticCoord.prototype.clone = function(){\n\treturn new GeodeticCoord(this.options);\n};", "module.exports = MagneticElements;\n\nfunction MagneticElements(options){\n\tthis.x = options.x;\n\tthis.y = options.y;\n\tthis.z = options.z;\n\tthis.h = options.h;\n\tthis.f = options.f;\n\tthis.incl = options.incl;\n\tthis.decl = options.decl;\n\tthis.gv = options.gv;\n\tthis.xdot = options.xdot;\n\tthis.ydot = options.ydot;\n\tthis.zdot = options.zdot;\n\tthis.hdot = options.hdot;\n\tthis.fdot = options.fdot;\n\tthis.incldot = options.incldot;\n\tthis.decldot = options.decldot;\n\tthis.gvdot = options.gvdot;\n}\n\nMagneticElements.prototype.clone = function(){\n\treturn new MagneticElements(this);\n};\n\nMagneticElements.prototype.scale = function(factor){\n\treturn new MagneticElements({\n\t\tx : this.x * factor,\n\t\ty : this.y * factor,\n\t\tz : this.z * factor,\n\t\th : this.h * factor,\n\t\tf : this.f * factor,\n\t\tincl : this.incl * factor,\n\t\tdecl : this.decl * factor,\n\t\tgv : this.gv * factor,\n\t\txdot : this.xdot * factor,\n\t\tydot : this.ydot * factor,\n\t\tzdot : this.zdot * factor,\n\t\thdot : this.hdot * factor,\n\t\tfdot : this.fdot * factor,\n\t\tincldot : this.incldot * factor,\n\t\tdecldot : this.decldot * factor,\n\t\tgvdot : this.gvdot * factor\n\t});\n};\n\nMagneticElements.prototype.subtract = function(subtrahend){\n\treturn new MagneticElements({\n\t\tx : this.x - subtrahend.x,\n\t\ty : this.y - subtrahend.y,\n\t\tz : this.z - subtrahend.z,\n\t\th : this.h - subtrahend.h,\n\t\tf : this.f - subtrahend.f,\n\t\tincl : this.incl - subtrahend.incl,\n\t\tdecl : this.decl - subtrahend.decl,\n\t\tgv : this.gv - subtrahend.gv,\n\t\txdot : this.xdot - subtrahend.xdot,\n\t\tydot : this.ydot - subtrahend.ydot,\n\t\tzdot : this.zdot - subtrahend.zdot,\n\t\thdot : this.hdot - subtrahend.hdot,\n\t\tfdot : this.fdot - subtrahend.fdot,\n\t\tincldot : this.incldot - subtrahend.incldot,\n\t\tdecldot : this.decldot - subtrahend.decldot,\n\t\tgvdot : this.gvdot - subtrahend.gvdot\n\t});\n};\n\nMagneticElements.fromGeoMagneticVector = function(magnetic_vector){\n\tvar bx = magnetic_vector.bx;\n\tvar by = magnetic_vector.by;\n\tvar bz = magnetic_vector.bz;\n\tvar h = Math.sqrt(bx*bx + by*by);\n\treturn new MagneticElements({\n\t\tx: bx,\n\t\ty: by,\n\t\tz: bz,\n\t\th: h,\n\t\tf: Math.sqrt(h*h + bz*bz),\n\t\tdecl: 180/Math.PI * Math.atan2(by, bx),\n\t\tincl: 180/Math.PI * Math.atan2(bz, h)\n\t});\n};\n\nMagneticElements.fromSecularVariationVector = function(magnetic_variation){\n\tvar bx = magnetic_variation.bx;\n\tvar by = magnetic_variation.by;\n\tvar bz = magnetic_variation.bz;\n\treturn new MagneticElements({\n\t\txdot: bx,\n\t\tydot: by,\n\t\tzdot: bz,\n\t\thdot: (this.x*bx + this.y*by) / this.h,\n\t\tfdot: (this.x*bx + this.y*by + this.z*bz) / this.f,\n\t\tdecldot: 180/Math.PI * (this.x*this.ydot - this.y*this.xdot) / (this.h*this.h),\n\t\tincldot: 180/Math.PI * (this.h*this.zdot - this.z*this.hdot) / (this.f*this.f),\n\t\tgvdot: this.decldot\n\t});\n};", "module.exports = MagneticVector;\n\nfunction MagneticVector(options){\n\tthis.bx = options.bx;\n\tthis.by = options.by;\n\tthis.bz = options.bz;\n}\n\nMagneticVector.prototype.rotate = function(coord_spherical, coord_geodetic) {\n\tvar psi = Math.PI/180 * (coord_spherical.phig - coord_geodetic.phi);\n\treturn new MagneticVector({\n\t\tbz: this.bx*Math.sin(psi) + this.bz*Math.cos(psi),\n\t\tbx: this.bx*Math.cos(psi) - this.bz*Math.sin(psi),\n\t\tby: this.by\n\t});\n};", "var GeodeticCoord = require('./coords/geodetic.js');\nvar MagneticElements = require('./magnetic_elements.js');\nvar MagneticVector = require('./magnetic_vector.js');\n\nmodule.exports = Model;\n\nfunction Model(options){\n\tthis.epoch = options.epoch;\n\tthis.start_date = new Date(options.start_date);\n\tthis.end_date = new Date(options.end_date);\n\tthis.name = options.name || \"\";\n\tthis.main_field_coeff_g = options.main_field_coeff_g || [0];\n\tthis.main_field_coeff_h = options.main_field_coeff_h || [0];\n\tthis.secular_var_coeff_g = options.secular_var_coeff_g || [0];\n\tthis.secular_var_coeff_h = options.secular_var_coeff_h || [0];\n\tthis.n_max = options.n_max || 0;\n\tthis.n_max_sec_var = options.n_max_sec_var || 0;\n\tthis.num_terms = this.n_max*(this.n_max+1)/2 + this.n_max;\n}\n\nModel.prototype.getTimedModel = function(date, allowOutOfBoundsModel = false){\n\tvar year_int = date.getUTCFullYear();\n\tvar fractional_year = (date.valueOf() - Date.UTC(year_int)) / (1000*3600*24*365);\n\tvar year = year_int + fractional_year;\n\tvar dyear = year - this.epoch;\n\n\tif(date < this.start_date || date > this.end_date){\n\t\tif(allowOutOfBoundsModel) {\n\t\t\tconsole.error(\"Model is only valid from \"+this.start_date.toDateString()+\" to \"+this.end_date.toDateString());\n\t\t} else {\n\t\t\tthrow new Error(\"Model is only valid from \"+this.start_date.toDateString()+\" to \"+this.end_date.toDateString());\n\t\t}\n\t}\n\n\tvar model = new Model({\n\t\tepoch: this.epoch,\n\t\tn_max: this.n_max,\n\t\tn_max_sec_var: this.n_max_sec_var,\n\t\tname: this.name,\n\t\tstart_date: this.start_date,\n\t\tend_date: this.end_date,\n\t});\n\tvar a = model.n_max_sec_var;\n\tvar b = a*(a + 1)/2 + a;\n\tfor(var n = 1; n <= this.n_max; n++){\n\t\tfor(var m = 0; m <= n; m++){\n\t\t\tvar i = n * (n + 1)/2 + m;\n\t\t\tvar hnm = this.main_field_coeff_h[i];\n\t\t\tvar gnm = this.main_field_coeff_g[i];\n\t\t\tvar dhnm = this.secular_var_coeff_h[i];\n\t\t\tvar dgnm = this.secular_var_coeff_g[i];\n\t\t\tif(i <= b){\n\t\t\t\tmodel.main_field_coeff_h[i] = hnm + dyear*dhnm;\n\t\t\t\tmodel.main_field_coeff_g[i] = gnm + dyear*dgnm;\n\t\t\t\tmodel.secular_var_coeff_h[i] = dhnm;\n\t\t\t\tmodel.secular_var_coeff_g[i] = dgnm;\n\t\t\t} else {\n\t\t\t\tmodel.main_field_coeff_h[i] = hnm;\n\t\t\t\tmodel.main_field_coeff_g[i] = gnm;\n\t\t\t}\n\t\t}\n\t}\n\treturn model;\n};\n\nModel.prototype.getSummation = function(legendre, sph_variables, coord_spherical){\n\tvar bx = 0;\n\tvar by = 0;\n\tvar bz = 0;\n\tvar n, m, i, k;\n\tvar relative_radius_power = sph_variables.relative_radius_power;\n\tvar cos_mlambda = sph_variables.cos_mlambda;\n\tvar sin_mlambda = sph_variables.sin_mlambda;\n\tvar g = this.main_field_coeff_g;\n\tvar h = this.main_field_coeff_h;\n\n\tfor(n = 1; n <= this.n_max; n++){\n\t\tfor(m = 0; m <= n; m++){\n\t\t\ti = n*(n+1)/2 + m;\n\t\t\tbz -= relative_radius_power[n] *\n\t\t\t\t(g[i]*cos_mlambda[m] + h[i]*sin_mlambda[m]) *\n\t\t\t\t(n+1) * legendre.pcup[i];\n\t\t\tby += relative_radius_power[n] *\n\t\t\t\t(g[i]*sin_mlambda[m] - h[i]*cos_mlambda[m]) *\n\t\t\t\t(m) * legendre.pcup[i];\n\t\t\tbx -= relative_radius_power[n] *\n\t\t\t\t(g[i]*cos_mlambda[m] + h[i]*sin_mlambda[m]) *\n\t\t\t\tlegendre.dpcup[i];\n\t\t}\n\t}\n\tvar cos_phi = Math.cos(Math.PI/180 * coord_spherical.phig);\n\tif(Math.abs(cos_phi) > 1e-10){\n\t\tby = by / cos_phi;\n\t} else {\n\t\t//special calculation around poles\n\t\tby = 0;\n\t\tvar schmidt_quasi_norm1 = 1.0, schmidt_quasi_norm2, schmidt_quasi_norm3;\n\t\tvar pcup_s = [1];\n\t\tvar sin_phi = Math.sin(Math.PI/180 * coord_spherical.phig);\n\n\t\tfor(n = 1; n <= this.n_max; n++){\n\t\t\ti = n*(n+1)/2 + 1;\n\t\t\tschmidt_quasi_norm2 = schmidt_quasi_norm1 * (2*n-1) / n;\n\t\t\tschmidt_quasi_norm3 = schmidt_quasi_norm2 * Math.sqrt(2*n/(n+1));\n\t\t\tschmidt_quasi_norm1 = schmidt_quasi_norm2;\n\t\t\tif(n == 1){\n\t\t\t\tpcup_s[n] = pcup_s[n-1];\n\t\t\t} else {\n\t\t\t\tk = ((n-1)*(n-1) - 1) / ((2*n-1)*(2*n-3));\n\t\t\t\tpcup_s[n] = sin_phi * pcup_s[n-1] - k*pcup_s[n-2];\n\t\t\t}\n\t\t\tby += relative_radius_power[n] *\n\t\t\t\t(g[i]*sin_mlambda[1] - h[i]*cos_mlambda[1]) *\n\t\t\t\tpcup_s[n] * schmidt_quasi_norm3;\n\t\t}\n\t}\n\treturn new MagneticVector({\n\t\tbx: bx, by: by, bz: bz\n\t});\n};\n\nModel.prototype.point = function(coords) {\n\t// Extract altitude if provided, otherwise default to 0\n\tvar altitude = (coords.length > 2 && typeof coords[2] === 'number') ? coords[2] : 0;\n\n\tvar coord_geodetic = new GeodeticCoord({\n\t\tlat: coords[0],\n\t\tlon: coords[1],\n\t\theight_above_ellipsoid: altitude\n\t});\n\tvar coord_spherical = coord_geodetic.toSpherical();\n\n\tvar legendre = coord_spherical.getLegendreFunction(this.n_max);\n\tvar harmonic_variables = coord_spherical.getHarmonicVariables(coord_geodetic.ellipsoid, this.n_max);\n\n\tvar magnetic_vector_sph = this.getSummation(legendre, harmonic_variables, coord_spherical);\n\tvar magnetic_vector_geo = magnetic_vector_sph.rotate(coord_spherical, coord_geodetic);\n\n\treturn MagneticElements.fromGeoMagneticVector(magnetic_vector_geo);\n};\n", "{\n  \"main_field_coeff_g\": [\n    0,\n    -29351.8,\n    -1410.8,\n    -2556.6,\n    2951.1,\n    1649.3,\n    1361,\n    -2404.1,\n    1243.8,\n    453.6,\n    895,\n    799.5,\n    55.7,\n    -281.1,\n    12.1,\n    -233.2,\n    368.9,\n    187.2,\n    -138.7,\n    -142,\n    20.9,\n    64.4,\n    63.8,\n    76.9,\n    -115.7,\n    -40.9,\n    14.9,\n    -60.7,\n    79.5,\n    -77,\n    -8.8,\n    59.3,\n    15.8,\n    2.5,\n    -11.1,\n    14.2,\n    23.2,\n    10.8,\n    -17.5,\n    2,\n    -21.7,\n    16.9,\n    15,\n    -16.8,\n    0.9,\n    4.6,\n    7.8,\n    3,\n    -0.2,\n    -2.5,\n    -13.1,\n    2.4,\n    8.6,\n    -8.7,\n    -12.9,\n    -1.3,\n    -6.4,\n    0.2,\n    2,\n    -1,\n    -0.6,\n    -0.9,\n    1.5,\n    0.9,\n    -2.7,\n    -3.9,\n    2.9,\n    -1.5,\n    -2.5,\n    2.4,\n    -0.6,\n    -0.1,\n    -0.6,\n    -0.1,\n    1.1,\n    -1,\n    -0.2,\n    2.6,\n    -2,\n    -0.2,\n    0.3,\n    1.2,\n    -1.3,\n    0.6,\n    0.6,\n    0.5,\n    -0.1,\n    -0.4,\n    -0.2,\n    -1.3,\n    -0.7\n  ],\n  \"main_field_coeff_h\": [\n    0,\n    0,\n    4545.4,\n    0,\n    -3133.6,\n    -815.1,\n    0,\n    -56.6,\n    237.5,\n    -549.5,\n    0,\n    278.6,\n    -133.9,\n    212,\n    -375.6,\n    0,\n    45.4,\n    220.2,\n    -122.9,\n    43,\n    106.1,\n    0,\n    -18.4,\n    16.8,\n    48.8,\n    -59.8,\n    10.9,\n    72.7,\n    0,\n    -48.9,\n    -14.4,\n    -1,\n    23.4,\n    -7.4,\n    -25.1,\n    -2.3,\n    0,\n    7.1,\n    -12.6,\n    11.4,\n    -9.7,\n    12.7,\n    0.7,\n    -5.2,\n    3.9,\n    0,\n    -24.8,\n    12.2,\n    8.3,\n    -3.3,\n    -5.2,\n    7.2,\n    -0.6,\n    0.8,\n    10,\n    0,\n    3.3,\n    0,\n    2.4,\n    5.3,\n    -9.1,\n    0.4,\n    -4.2,\n    -3.8,\n    0.9,\n    -9.1,\n    0,\n    0,\n    2.9,\n    -0.6,\n    0.2,\n    0.5,\n    -0.3,\n    -1.2,\n    -1.7,\n    -2.9,\n    -1.8,\n    -2.3,\n    0,\n    -1.3,\n    0.7,\n    1,\n    -1.4,\n    0,\n    0.6,\n    -0.1,\n    0.8,\n    0.1,\n    -1,\n    0.1,\n    0.2\n  ],\n  \"secular_var_coeff_g\": [\n    0,\n    12,\n    9.7,\n    -11.6,\n    -5.2,\n    -8,\n    -1.3,\n    -4.2,\n    0.4,\n    -15.6,\n    -1.6,\n    -2.4,\n    -6,\n    5.6,\n    -7,\n    0.6,\n    1.4,\n    0,\n    0.6,\n    2.2,\n    0.9,\n    -0.2,\n    -0.4,\n    0.9,\n    1.2,\n    -0.9,\n    0.3,\n    0.9,\n    0,\n    -0.1,\n    -0.1,\n    0.5,\n    -0.1,\n    -0.8,\n    -0.8,\n    0.8,\n    -0.1,\n    0.2,\n    0,\n    0.5,\n    -0.1,\n    0.3,\n    0.2,\n    0,\n    0.2,\n    0,\n    -0.1,\n    0.1,\n    0.3,\n    -0.3,\n    0,\n    0.3,\n    -0.1,\n    0.1,\n    -0.1,\n    0.1,\n    0,\n    0.1,\n    0.1,\n    0,\n    -0.3,\n    0,\n    -0.1,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1,\n    0,\n    0,\n    -0.1,\n    -0.1,\n    -0.1,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0.1,\n    0,\n    0,\n    0,\n    -0.1,\n    0,\n    -0.1\n  ],\n  \"secular_var_coeff_h\": [\n    0,\n    0,\n    -21.5,\n    0,\n    -27.7,\n    -12.1,\n    0,\n    4,\n    -0.3,\n    -4.1,\n    0,\n    -1.1,\n    4.1,\n    1.6,\n    -4.4,\n    0,\n    -0.5,\n    2.2,\n    0.4,\n    1.7,\n    1.9,\n    0,\n    0.3,\n    -1.6,\n    -0.4,\n    0.9,\n    0.7,\n    0.9,\n    0,\n    0.6,\n    0.5,\n    -0.8,\n    0,\n    -1,\n    0.6,\n    -0.2,\n    0,\n    -0.2,\n    0.5,\n    -0.4,\n    0.4,\n    -0.5,\n    -0.6,\n    0.3,\n    0.2,\n    0,\n    -0.3,\n    0.3,\n    -0.3,\n    0.3,\n    0.2,\n    -0.1,\n    -0.2,\n    0.4,\n    0.1,\n    0,\n    0,\n    0,\n    -0.2,\n    0.1,\n    -0.1,\n    0.1,\n    0,\n    -0.1,\n    0.2,\n    0,\n    0,\n    0,\n    0.1,\n    0,\n    0.1,\n    0,\n    0,\n    0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1,\n    0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1\n  ],\n  \"n_max\": 12,\n  \"n_max_sec_var\": 12,\n  \"epoch\": 2025,\n  \"name\": \"WMM-2025\",\n  \"start_date\": \"2024-11-13T03:00:00.000Z\",\n  \"end_date\": \"2029-11-13T03:00:00.000Z\"\n}", "{\n  \"main_field_coeff_g\": [\n    0,\n    -29404.5,\n    -1450.7,\n    -2500,\n    2982,\n    1676.8,\n    1363.9,\n    -2381,\n    1236.2,\n    525.7,\n    903.1,\n    809.4,\n    86.2,\n    -309.4,\n    47.9,\n    -234.4,\n    363.1,\n    187.8,\n    -140.7,\n    -151.2,\n    13.7,\n    65.9,\n    65.6,\n    73,\n    -121.5,\n    -36.2,\n    13.5,\n    -64.7,\n    80.6,\n    -76.8,\n    -8.3,\n    56.5,\n    15.8,\n    6.4,\n    -7.2,\n    9.8,\n    23.6,\n    9.8,\n    -17.5,\n    -0.4,\n    -21.1,\n    15.3,\n    13.7,\n    -16.5,\n    -0.3,\n    5,\n    8.2,\n    2.9,\n    -1.4,\n    -1.1,\n    -13.3,\n    1.1,\n    8.9,\n    -9.3,\n    -11.9,\n    -1.9,\n    -6.2,\n    -0.1,\n    1.7,\n    -0.9,\n    0.6,\n    -0.9,\n    1.9,\n    1.4,\n    -2.4,\n    -3.9,\n    3,\n    -1.4,\n    -2.5,\n    2.4,\n    -0.9,\n    0.3,\n    -0.7,\n    -0.1,\n    1.4,\n    -0.6,\n    0.2,\n    3.1,\n    -2,\n    -0.1,\n    0.5,\n    1.3,\n    -1.2,\n    0.7,\n    0.3,\n    0.5,\n    -0.2,\n    -0.5,\n    0.1,\n    -1.1,\n    -0.3\n  ],\n  \"main_field_coeff_h\": [\n    0,\n    0,\n    4652.9,\n    0,\n    -2991.6,\n    -734.8,\n    0,\n    -82.2,\n    241.8,\n    -542.9,\n    0,\n    282,\n    -158.4,\n    199.8,\n    -350.1,\n    0,\n    47.7,\n    208.4,\n    -121.3,\n    32.2,\n    99.1,\n    0,\n    -19.1,\n    25,\n    52.7,\n    -64.4,\n    9,\n    68.1,\n    0,\n    -51.4,\n    -16.8,\n    2.3,\n    23.5,\n    -2.2,\n    -27.2,\n    -1.9,\n    0,\n    8.4,\n    -15.3,\n    12.8,\n    -11.8,\n    14.9,\n    3.6,\n    -6.9,\n    2.8,\n    0,\n    -23.3,\n    11.1,\n    9.8,\n    -5.1,\n    -6.2,\n    7.8,\n    0.4,\n    -1.5,\n    9.7,\n    0,\n    3.4,\n    -0.2,\n    3.5,\n    4.8,\n    -8.6,\n    -0.1,\n    -4.2,\n    -3.4,\n    -0.1,\n    -8.8,\n    0,\n    0,\n    2.6,\n    -0.5,\n    -0.4,\n    0.6,\n    -0.2,\n    -1.7,\n    -1.6,\n    -3,\n    -2,\n    -2.6,\n    0,\n    -1.2,\n    0.5,\n    1.3,\n    -1.8,\n    0.1,\n    0.7,\n    -0.1,\n    0.6,\n    0.2,\n    -0.9,\n    0,\n    0.5\n  ],\n  \"secular_var_coeff_g\": [\n    0,\n    6.7,\n    7.7,\n    -11.5,\n    -7.1,\n    -2.2,\n    2.8,\n    -6.2,\n    3.4,\n    -12.2,\n    -1.1,\n    -1.6,\n    -6,\n    5.4,\n    -5.5,\n    -0.3,\n    0.6,\n    -0.7,\n    0.1,\n    1.2,\n    1,\n    -0.6,\n    -0.4,\n    0.5,\n    1.4,\n    -1.4,\n    0,\n    0.8,\n    -0.1,\n    -0.3,\n    -0.1,\n    0.7,\n    0.2,\n    -0.5,\n    -0.8,\n    1,\n    -0.1,\n    0.1,\n    -0.1,\n    0.5,\n    -0.1,\n    0.4,\n    0.5,\n    0,\n    0.4,\n    -0.1,\n    -0.2,\n    0,\n    0.4,\n    -0.3,\n    0,\n    0.3,\n    0,\n    0,\n    -0.4,\n    0,\n    0,\n    0,\n    0.2,\n    -0.1,\n    -0.2,\n    0,\n    -0.1,\n    -0.2,\n    -0.1,\n    0,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    -0.1,\n    0,\n    0,\n    -0.1,\n    -0.1,\n    -0.1,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1\n  ],\n  \"secular_var_coeff_h\": [\n    0,\n    0,\n    -25.1,\n    0,\n    -30.2,\n    -23.9,\n    0,\n    5.7,\n    -1,\n    1.1,\n    0,\n    0.2,\n    6.9,\n    3.7,\n    -5.6,\n    0,\n    0.1,\n    2.5,\n    -0.9,\n    3,\n    0.5,\n    0,\n    0.1,\n    -1.8,\n    -1.4,\n    0.9,\n    0.1,\n    1,\n    0,\n    0.5,\n    0.6,\n    -0.7,\n    -0.2,\n    -1.2,\n    0.2,\n    0.3,\n    0,\n    -0.3,\n    0.7,\n    -0.2,\n    0.5,\n    -0.3,\n    -0.5,\n    0.4,\n    0.1,\n    0,\n    -0.3,\n    0.2,\n    -0.4,\n    0.4,\n    0.1,\n    0,\n    -0.2,\n    0.5,\n    0.2,\n    0,\n    0,\n    0.1,\n    -0.3,\n    0.1,\n    -0.2,\n    0.1,\n    0,\n    -0.1,\n    0.2,\n    0,\n    0,\n    0,\n    0.1,\n    0,\n    0.2,\n    0,\n    0,\n    0.1,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1,\n    0.1,\n    0,\n    0,\n    0,\n    0.1,\n    0,\n    0,\n    0,\n    -0.1\n  ],\n  \"n_max\": 12,\n  \"n_max_sec_var\": 12,\n  \"epoch\": 2020,\n  \"name\": \"WMM-2020\",\n  \"start_date\": \"2019-12-10T08:00:00.000Z\",\n  \"end_date\": \"2024-12-10T08:00:00.000Z\"\n}", "{\n  \"main_field_coeff_g\": [\n    0,\n    -29438.2,\n    -1493.5,\n    -2444.5,\n    3014.7,\n    1679,\n    1351.8,\n    -2351.6,\n    1223.6,\n    582.3,\n    907.5,\n    814.8,\n    117.8,\n    -335.6,\n    69.7,\n    -232.9,\n    360.1,\n    191.7,\n    -141.3,\n    -157.2,\n    7.7,\n    69.4,\n    67.7,\n    72.3,\n    -129.1,\n    -28.4,\n    13.6,\n    -70.3,\n    81.7,\n    -75.9,\n    -7.1,\n    52.2,\n    15,\n    9.1,\n    -3,\n    5.9,\n    24.2,\n    8.9,\n    -16.9,\n    -3.1,\n    -20.7,\n    13.3,\n    11.6,\n    -16.3,\n    -2.1,\n    5.5,\n    8.8,\n    3,\n    -3.2,\n    0.6,\n    -13.2,\n    -0.1,\n    8.7,\n    -9.1,\n    -10.4,\n    -2,\n    -6.1,\n    0.2,\n    0.6,\n    -0.5,\n    1.8,\n    -0.7,\n    2.2,\n    2.4,\n    -1.8,\n    -3.6,\n    3,\n    -1.4,\n    -2.3,\n    2.1,\n    -0.8,\n    0.6,\n    -0.7,\n    0.1,\n    1.7,\n    -0.2,\n    0.4,\n    3.5,\n    -2,\n    -0.1,\n    0.5,\n    1.2,\n    -0.9,\n    0.9,\n    0.1,\n    0.6,\n    -0.4,\n    -0.5,\n    0.2,\n    -0.9,\n    0\n  ],\n  \"main_field_coeff_h\": [\n    0,\n    0,\n    4796.3,\n    0,\n    -2842.4,\n    -638.8,\n    0,\n    -113.7,\n    246.5,\n    -537.4,\n    0,\n    283.3,\n    -188.6,\n    180.7,\n    -330,\n    0,\n    46.9,\n    196.5,\n    -119.9,\n    16,\n    100.6,\n    0,\n    -20.1,\n    32.8,\n    59.1,\n    -67.1,\n    8.1,\n    61.9,\n    0,\n    -54.3,\n    -19.5,\n    6,\n    24.5,\n    3.5,\n    -27.7,\n    -2.9,\n    0,\n    10.1,\n    -18.3,\n    13.3,\n    -14.5,\n    16.2,\n    6,\n    -9.2,\n    2.4,\n    0,\n    -21.8,\n    10.7,\n    11.8,\n    -6.8,\n    -6.9,\n    7.9,\n    1,\n    -3.9,\n    8.5,\n    0,\n    3.3,\n    -0.4,\n    4.6,\n    4.4,\n    -7.9,\n    -0.6,\n    -4.2,\n    -2.9,\n    -1.1,\n    -8.8,\n    0,\n    0,\n    2.1,\n    -0.6,\n    -1.1,\n    0.7,\n    -0.2,\n    -2.1,\n    -1.5,\n    -2.6,\n    -2,\n    -2.3,\n    0,\n    -1,\n    0.3,\n    1.8,\n    -2.2,\n    0.3,\n    0.7,\n    -0.1,\n    0.3,\n    0.2,\n    -0.9,\n    -0.2,\n    0.8\n  ],\n  \"secular_var_coeff_g\": [\n    0,\n    7,\n    9,\n    -11,\n    -6.2,\n    0.3,\n    2.4,\n    -5.7,\n    2,\n    -11,\n    -0.8,\n    -0.9,\n    -6.5,\n    5.2,\n    -4,\n    -0.3,\n    0.6,\n    -0.8,\n    0.1,\n    1.2,\n    1.4,\n    -0.8,\n    -0.5,\n    -0.1,\n    1.6,\n    -1.6,\n    0,\n    1.2,\n    -0.3,\n    -0.2,\n    -0.3,\n    0.9,\n    0.1,\n    -0.6,\n    -0.9,\n    0.7,\n    -0.1,\n    0.2,\n    -0.2,\n    0.5,\n    -0.1,\n    0.4,\n    0.4,\n    -0.1,\n    0.4,\n    -0.1,\n    -0.1,\n    0,\n    0.4,\n    -0.4,\n    0,\n    0.3,\n    0,\n    0,\n    -0.3,\n    0,\n    0,\n    -0.1,\n    0.2,\n    -0.1,\n    -0.2,\n    0,\n    -0.1,\n    -0.2,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    -0.1,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1\n  ],\n  \"secular_var_coeff_h\": [\n    0,\n    0,\n    -30.2,\n    0,\n    -29.6,\n    -17.3,\n    0,\n    6.5,\n    -0.8,\n    -2,\n    0,\n    -0.4,\n    5.8,\n    3.8,\n    -3.5,\n    0,\n    0.2,\n    2.3,\n    0,\n    3.3,\n    -0.6,\n    0,\n    0.3,\n    -1.5,\n    -1.2,\n    0.4,\n    0.2,\n    1.3,\n    0,\n    0.6,\n    0.5,\n    -0.8,\n    -0.2,\n    -1.1,\n    0.1,\n    0.2,\n    0,\n    -0.4,\n    0.6,\n    -0.1,\n    0.6,\n    -0.2,\n    -0.5,\n    0.5,\n    0.1,\n    0,\n    -0.3,\n    0.1,\n    -0.4,\n    0.3,\n    0.1,\n    0,\n    -0.1,\n    0.5,\n    0.2,\n    0,\n    0,\n    0.1,\n    -0.2,\n    0.1,\n    -0.1,\n    0.1,\n    0,\n    -0.1,\n    0.2,\n    0,\n    0,\n    0,\n    0.1,\n    0,\n    0.1,\n    0,\n    0,\n    0.1,\n    0,\n    -0.1,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    -0.1,\n    0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1\n  ],\n  \"n_max\": 12,\n  \"n_max_sec_var\": 12,\n  \"epoch\": 2015,\n  \"name\": \"WMM-2015v2\",\n  \"start_date\": \"2018-09-18T06:00:00.000Z\",\n  \"end_date\": \"2023-09-18T06:00:00.000Z\"\n}\n", "{\n  \"main_field_coeff_g\": [\n    0,\n    -29438.5,\n    -1501.1,\n    -2445.3,\n    3012.5,\n    1676.6,\n    1351.1,\n    -2352.3,\n    1225.6,\n    581.9,\n    907.2,\n    813.7,\n    120.3,\n    -335,\n    70.3,\n    -232.6,\n    360.1,\n    192.4,\n    -141,\n    -157.4,\n    4.3,\n    69.5,\n    67.4,\n    72.8,\n    -129.8,\n    -29,\n    13.2,\n    -70.9,\n    81.6,\n    -76.1,\n    -6.8,\n    51.9,\n    15,\n    9.3,\n    -2.8,\n    6.7,\n    24,\n    8.6,\n    -16.9,\n    -3.2,\n    -20.6,\n    13.3,\n    11.7,\n    -16,\n    -2,\n    5.4,\n    8.8,\n    3.1,\n    -3.1,\n    0.6,\n    -13.3,\n    -0.1,\n    8.7,\n    -9.1,\n    -10.5,\n    -1.9,\n    -6.5,\n    0.2,\n    0.6,\n    -0.6,\n    1.7,\n    -0.7,\n    2.1,\n    2.3,\n    -1.8,\n    -3.6,\n    3.1,\n    -1.5,\n    -2.3,\n    2.1,\n    -0.9,\n    0.6,\n    -0.7,\n    0.2,\n    1.7,\n    -0.2,\n    0.4,\n    3.5,\n    -2,\n    -0.3,\n    0.4,\n    1.3,\n    -0.9,\n    0.9,\n    0.1,\n    0.5,\n    -0.4,\n    -0.4,\n    0.2,\n    -0.9,\n    0\n  ],\n  \"main_field_coeff_h\": [\n    0,\n    0,\n    4796.2,\n    0,\n    -2845.6,\n    -642,\n    0,\n    -115.3,\n    245,\n    -538.3,\n    0,\n    283.4,\n    -188.6,\n    180.9,\n    -329.5,\n    0,\n    47.4,\n    196.9,\n    -119.4,\n    16.1,\n    100.1,\n    0,\n    -20.7,\n    33.2,\n    58.8,\n    -66.5,\n    7.3,\n    62.5,\n    0,\n    -54.1,\n    -19.4,\n    5.6,\n    24.4,\n    3.3,\n    -27.5,\n    -2.3,\n    0,\n    10.2,\n    -18.1,\n    13.2,\n    -14.6,\n    16.2,\n    5.7,\n    -9.1,\n    2.2,\n    0,\n    -21.6,\n    10.8,\n    11.7,\n    -6.8,\n    -6.9,\n    7.8,\n    1,\n    -3.9,\n    8.5,\n    0,\n    3.3,\n    -0.3,\n    4.6,\n    4.4,\n    -7.9,\n    -0.6,\n    -4.1,\n    -2.8,\n    -1.1,\n    -8.7,\n    0,\n    -0.1,\n    2.1,\n    -0.7,\n    -1.1,\n    0.7,\n    -0.2,\n    -2.1,\n    -1.5,\n    -2.5,\n    -2,\n    -2.3,\n    0,\n    -1,\n    0.5,\n    1.8,\n    -2.2,\n    0.3,\n    0.7,\n    -0.1,\n    0.3,\n    0.2,\n    -0.9,\n    -0.2,\n    0.7\n  ],\n  \"secular_var_coeff_g\": [\n    0,\n    10.7,\n    17.9,\n    -8.6,\n    -3.3,\n    2.4,\n    3.1,\n    -6.2,\n    -0.4,\n    -10.4,\n    -0.4,\n    0.8,\n    -9.2,\n    4,\n    -4.2,\n    -0.2,\n    0.1,\n    -1.4,\n    0,\n    1.3,\n    3.8,\n    -0.5,\n    -0.2,\n    -0.6,\n    2.4,\n    -1.1,\n    0.3,\n    1.5,\n    0.2,\n    -0.2,\n    -0.4,\n    1.3,\n    0.2,\n    -0.4,\n    -0.9,\n    0.3,\n    0,\n    0.1,\n    -0.5,\n    0.5,\n    -0.2,\n    0.4,\n    0.2,\n    -0.4,\n    0.3,\n    0,\n    -0.1,\n    -0.1,\n    0.4,\n    -0.5,\n    -0.2,\n    0.1,\n    0,\n    -0.2,\n    -0.1,\n    0,\n    0,\n    -0.1,\n    0.3,\n    -0.1,\n    -0.1,\n    -0.1,\n    0,\n    -0.2,\n    -0.1,\n    -0.2,\n    0,\n    0,\n    -0.1,\n    0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -0.1,\n    -0.1,\n    0.1,\n    0,\n    0,\n    0.1,\n    -0.1,\n    0,\n    0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  ],\n  \"secular_var_coeff_h\": [\n    0,\n    0,\n    -26.8,\n    0,\n    -27.1,\n    -13.3,\n    0,\n    8.4,\n    -0.4,\n    2.3,\n    0,\n    -0.6,\n    5.3,\n    3,\n    -5.3,\n    0,\n    0.4,\n    1.6,\n    -1.1,\n    3.3,\n    0.1,\n    0,\n    0,\n    -2.2,\n    -0.7,\n    0.1,\n    1,\n    1.3,\n    0,\n    0.7,\n    0.5,\n    -0.2,\n    -0.1,\n    -0.7,\n    0.1,\n    0.1,\n    0,\n    -0.3,\n    0.3,\n    0.3,\n    0.6,\n    -0.1,\n    -0.2,\n    0.3,\n    0,\n    0,\n    -0.2,\n    -0.1,\n    -0.2,\n    0.1,\n    0.1,\n    0,\n    -0.2,\n    0.4,\n    0.3,\n    0,\n    0.1,\n    -0.1,\n    0,\n    0,\n    -0.2,\n    0.1,\n    -0.1,\n    -0.2,\n    0.1,\n    -0.1,\n    0,\n    0,\n    0.1,\n    0,\n    0.1,\n    0,\n    0,\n    0.1,\n    0,\n    -0.1,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    -0.1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  ],\n  \"n_max\": 12,\n  \"n_max_sec_var\": 12,\n  \"epoch\": 2015,\n  \"name\": \"WMM-2015\",\n  \"start_date\": \"2014-12-15T07:00:00.000Z\",\n  \"end_date\": \"2019-12-15T07:00:00.000Z\"\n}", "const Model = require('./lib/model.js');\nconst geomagnetism = module.exports = {};\n\nconst modelData = [\n\t{\n\t\tfile: require('./data/wmm-2025.json'),\n\t\tstartDate: new Date(\"2024-11-13T03:00:00.000Z\"),\n\t\tendDate: new Date(\"2029-11-13T03:00:00.000Z\")\n\t},\n\t{\n\t\tfile: require('./data/wmm-2020.json'),\n\t\tstartDate: new Date(\"2019-12-10T08:00:00.000Z\"),\n\t\tendDate: new Date(\"2024-12-10T08:00:00.000Z\")\n\t},\n\t{\n\t\tfile: require('./data/wmm-2015v2.json'),\n\t\tstartDate: new Date(\"2018-09-18T06:00:00.000Z\"),\n\t\tendDate: new Date(\"2023-09-18T06:00:00.000Z\")\n\t},\n\t{\n\t\tfile: require('./data/wmm-2015.json'),\n\t\tstartDate: new Date(\"2014-12-15T07:00:00.000Z\"),\n\t\tendDate: new Date(\"2019-12-15T07:00:00.000Z\")\n\t}\n];\n\n\ngeomagnetism.model = function (date, options = {}) {\n\tdate = date || new Date();\n\tconst ts = date.getTime();\n\n\tconst allowOutOfBoundsModel = (options && options.allowOutOfBoundsModel) || false;\n\n\t// Get the latest matching model \n\tlet matchingModelData = modelData.find((model) => {\n\t\treturn ts >= model.startDate.getTime() && ts <= model.endDate.getTime();\n\t});\n\n\t// Get if the date is before the first model or after the last model\n\tif (!matchingModelData && ts < modelData[modelData.length - 1].startDate.getTime()) {\n\t\tmatchingModelData = modelData[modelData.length - 1];\n\t} else if (!matchingModelData && ts > modelData[0].endDate.getTime()) {\n\t\tmatchingModelData = modelData[0];\n\t}\n\n\t// If no matching model found, use the latest\n\tif (!matchingModelData) {\n\t\tmatchingModelData = modelData[0]; // latest (will throw error if allowOutOfBoundsModel is true)\n\t}\n\n\tconst matchingModel = new Model(matchingModelData.file);\n\n\treturn matchingModel.getTimedModel(date, allowOutOfBoundsModel);\n};\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAI,gBAAgB;AAEpB,WAAO,UAAU;AAEjB,aAAS,eAAe,SAAQ;AAC/B,WAAK,IAAI,QAAQ;AACjB,WAAK,IAAI,QAAQ;AACjB,WAAK,IAAI,QAAQ;AAAA,IAClB;AAEA,mBAAe,UAAU,aAAa,SAAS,WAAU;AACxD,UAAI,aAAa,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,UAAU;AACvD,UAAI,IAAI,KAAK;AACb,UAAI,IAAI,KAAK;AACb,UAAI,IAAI,KAAK;AACb,UAAI,IAAI,KAAK,IAAI,IAAE,IAAI,IAAE,CAAC;AAC1B,UAAI,KAAK,aAAW,KAAK,UAAU,IAAE,UAAU,IAAI,aAAW,gBAAgB,UAAU,IAAE;AAC1F,UAAI,KAAK,aAAW,KAAK,UAAU,IAAE,UAAU,IAAI,aAAW,gBAAgB,UAAU,IAAE;AAC1F,UAAI,IAAK,IAAE,KAAM,IAAE,IAAE;AACrB,UAAI,IAAI,KAAK,IAAE,IAAI,IAAE;AACrB,UAAI,IAAI,IAAE,IAAE,IAAI,IAAE;AAClB,UAAI;AACJ,UAAG,IAAI,GAAG;AACT,YAAI,KAAK,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,IAAE,CAAC,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,IAAE,CAAC;AAAA,MACrE,OAAO;AACN,YAAI,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,EAAG,IAAI,CAAC;AAAA,MACzE;AACA,UAAG,IAAE,IAAI,KAAK,IAAI,CAAC,GAAG;AACrB,YAAI,EAAE,IAAE,IAAE,IAAI,IAAE,KAAK,IAAE;AAAA,MACxB;AACA,UAAI,KAAK,KAAK,KAAK,IAAE,IAAI,CAAC,IAAI,KAAK;AACnC,UAAI,IAAI,KAAK,KAAK,IAAE,KAAK,IAAI,IAAE,MAAI,IAAE,IAAI,EAAE,IAAI;AAC/C,UAAI,OAAO,KAAK,KAAO,UAAU,KAAG,IAAI,IAAE,MAAO,IAAE,aAAW,EAAG;AACjE,UAAI,QAAQ,KAAK,MAAM,GAAG,CAAC;AAC3B,UAAG,QAAQ,EAAG,UAAS,IAAE,KAAK;AAC9B,UAAI,0BAA0B,IAAI,UAAU,IAAE,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,cAAc,KAAK,IAAI,IAAI;AACpG,UAAI,SAAS,QAAQ,KAAK,KAAG;AAC7B,UAAG,SAAS,IAAK,WAAU;AAE3B,aAAO,IAAI,cAAc;AAAA,QACxB;AAAA,QACA,KAAK,OAAO,KAAK,KAAG;AAAA,QACpB;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAAA;AAAA;;;AC7CA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,iBAAiB,iBAAiB,OAAM;AAChD,UAAI,UAAU,KAAK,IAAI,KAAK,KAAG,MAAM,gBAAgB,IAAI;AACzD,UAAI;AACJ,UAAG,SAAS,MAAO,IAAI,KAAK,IAAI,OAAO,IAAK,OAAM;AACjD,iBAAS,QAAQ,SAAS,KAAK;AAAA,MAChC,OAAO;AACN,iBAAS,SAAS,SAAS,KAAK;AAAA,MACjC;AACA,WAAK,OAAO,OAAO;AACnB,WAAK,QAAQ,OAAO;AAAA,IACrB;AAEA,aAAS,QAAQ,GAAG,OAAM;AACzB,UAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI;AAC3B,UAAI,qBAAqB,CAAC,CAAG;AAC7B,UAAI,OAAO,CAAC,CAAG;AACf,UAAI,QAAQ,CAAC,CAAG;AAEhB,UAAI,KAAK,MAAM,IAAE,MAAI,IAAE,EAAE;AACzB,mBAAa,QAAM,MAAM,QAAM,KAAK;AAGpC,WAAI,IAAI,GAAG,KAAK,OAAO,KAAK;AAC3B,aAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AACvB,cAAI,KAAG,IAAE,KAAG,IAAI;AAChB,cAAG,KAAK,GAAE;AACT,kBAAM,IAAE,KAAG,IAAE,IAAI,IAAI;AACrB,iBAAK,CAAC,IAAI,IAAE,KAAK,EAAE;AACnB,kBAAM,CAAC,IAAI,IAAE,MAAM,EAAE,IAAI,IAAE,KAAK,EAAE;AAAA,UACnC,WAAW,KAAK,KAAK,KAAK,GAAG;AAC5B,kBAAM,IAAE,KAAG,IAAE,IAAI;AACjB,iBAAK,CAAC,IAAI,IAAE,KAAK,EAAE;AACnB,kBAAM,CAAC,IAAI,IAAE,MAAM,EAAE,IAAI,IAAE,KAAK,EAAE;AAAA,UACnC,WAAW,IAAI,KAAK,KAAK,GAAG;AAC3B,kBAAM,IAAE,MAAI,IAAE,KAAG,IAAI;AACrB,kBAAM,IAAE,KAAG,IAAE,IAAI;AACjB,gBAAG,IAAI,IAAI,GAAE;AACZ,mBAAK,CAAC,IAAI,IAAE,KAAK,EAAE;AACnB,oBAAM,CAAC,IAAI,IAAE,MAAM,EAAE,IAAI,IAAE,KAAK,EAAE;AAAA,YACnC,OAAO;AACN,oBAAM,IAAE,MAAI,IAAE,KAAK,IAAE,OAAO,IAAE,IAAE,MAAI,IAAE,IAAE;AACxC,mBAAK,CAAC,IAAI,IAAE,KAAK,EAAE,IAAI,IAAE,KAAK,EAAE;AAChC,oBAAM,CAAC,IAAI,IAAE,MAAM,EAAE,IAAI,IAAE,KAAK,EAAE,IAAI,IAAE,MAAM,EAAE;AAAA,YACjD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,WAAI,IAAI,GAAG,KAAK,OAAO,KAAK;AAC3B,YAAI,KAAG,IAAE,KAAG;AACZ,cAAM,IAAE,KAAG,IAAE;AACb,2BAAmB,CAAC,IAAI,mBAAmB,EAAE,KAAK,IAAE,IAAE,KAAK;AAC3D,aAAI,IAAI,GAAG,KAAK,GAAG,KAAI;AACtB,cAAI,KAAG,IAAE,KAAG,IAAI;AAChB,eAAK,KAAG,IAAE,KAAG,IAAI,IAAI;AACrB,6BAAmB,CAAC,IAAI,mBAAmB,EAAE,IAAI,KAAK,MAAO,IAAI,IAAI,MAAM,KAAK,IAAI,IAAI,MAAO,IAAI,EAAE;AAAA,QACtG;AAAA,MACD;AAEA,WAAI,IAAI,GAAG,KAAK,OAAO,KAAK;AAC3B,aAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AACvB,cAAI,KAAG,IAAE,KAAG,IAAE;AACd,eAAK,CAAC,KAAK,mBAAmB,CAAC;AAC/B,gBAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC;AAAA,QAClC;AAAA,MACD;AAEA,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,aAAS,SAAS,GAAG,OAAM;AAC1B,UAAG,KAAK,IAAI,CAAC,KAAK,GAAI;AACrB,cAAM,IAAI,MAAM,6DAA6D;AAAA,MAC9E;AAEA,UAAI,GAAG,GAAG;AACV,UAAI,aAAa,QAAQ,MAAM,QAAQ,KAAG;AAC1C,UAAI,KAAK,CAAC;AACV,UAAI,KAAK,CAAC;AACV,UAAI,UAAU,CAAC;AACf,UAAI,SAAS;AAEb,WAAI,IAAI,GAAG,KAAK,IAAE,QAAQ,GAAG,EAAE,GAAE;AAChC,gBAAQ,CAAC,IAAI,KAAK,KAAK,CAAC;AAAA,MACzB;AAEA,UAAI;AACJ,WAAI,IAAI,GAAG,KAAK,OAAO,KAAI;AAC1B;AACA,WAAG,CAAC,KAAK,IAAE,IAAI,KAAK;AACpB,WAAG,CAAC,KAAK,IAAI,KAAK;AAClB,aAAI,IAAI,GAAG,KAAK,IAAI,GAAG,KAAI;AAC1B;AACA,aAAG,CAAC,KAAK,IAAE,IAAI,KAAK,QAAQ,IAAE,CAAC,IAAI,QAAQ,IAAE,CAAC;AAC9C,aAAG,CAAC,IAAI,QAAQ,IAAE,IAAE,CAAC,IAAI,QAAQ,IAAE,IAAE,CAAC,IAAI,QAAQ,IAAE,CAAC,IAAI,QAAQ,IAAE,CAAC;AAAA,QACrE;AACA,aAAK;AAAA,MACN;AAEA,UAAI,IAAI,KAAK,MAAM,IAAE,MAAI,IAAE,EAAE;AAC7B,UAAI;AACJ,UAAI,MAAM;AACV,UAAI,MAAM;AACV,UAAI,OAAO,CAAC,GAAK,GAAG;AACpB,UAAI,QAAQ,CAAC,GAAK,CAAC;AACnB,UAAG,SAAS,GAAE;AACb,cAAM,IAAI,MAAM,iDAAiD;AAAA,MAClE;AAEA,UAAI;AACJ,WAAI,IAAI,GAAG,KAAK,OAAO,KACvB;AACC,YAAI,IAAI;AACR,cAAM,GAAG,CAAC,IAAI,IAAI,MAAM,GAAG,CAAC,IAAI;AAChC,aAAK,CAAC,IAAI;AACV,cAAM,CAAC,IAAI,KAAK,MAAM,IAAI,OAAO;AACjC,cAAM;AACN,cAAM;AAAA,MACP;AAEA,UAAI,MAAM,QAAQ,CAAC,IAAI;AACvB,UAAI,WAAW,IAAE;AACjB,UAAI,SAAS;AAEb,eAAQ,IAAI,GAAG,KAAK,QAAQ,GAAG,EAAE,GAAE;AAClC,oBAAY;AAGZ,iBAAS,SAAS,IAAI;AACtB,cAAM,MAAM,QAAQ,IAAE,IAAE,CAAC,IAAI,QAAQ,IAAE,CAAC;AACxC,aAAK,MAAM,IAAI,MAAM,WAAW,QAAQ,IAAE,IAAE,CAAC;AAC7C,cAAM,MAAM,IAAI,EAAG,IAAE,IAAE,KAAK,MAAM,IAAG;AACrC,cAAM,MAAM,QAAQ,IAAE,IAAI,CAAC;AAG3B,YAAI,SAAS,IAAI;AACjB,cAAM,IAAI,QAAQ,IAAE,IAAE,CAAC,IAAI;AAC3B,aAAK,CAAC,IAAI,MAAI;AACd,cAAM,CAAC,KAAK,MAAI,WAAU,QAAQ,IAAE,IAAE,CAAC,IAAI,KAAG,IAAE,KAAG,KAAK,CAAC,KAAK;AAG9D,aAAI,IAAI,IAAI,GAAG,KAAK,OAAO,EAAE,GAAE;AAC9B,cAAI,IAAI;AACR,gBAAM,IAAE,GAAG,CAAC,IAAE,MAAM,GAAG,CAAC,IAAE;AAC1B,eAAK,CAAC,IAAI,MAAI;AACd,gBAAM,CAAC,KAAK,QAAQ,IAAE,CAAC,IAAE,QAAQ,IAAE,CAAC,IAAE,MAAI,WAAW,IAAE,IAAE,KAAK,CAAC,KAAK;AACpE,gBAAM;AACN,gBAAM;AAAA,QACP;AAAA,MACD;AAGA,iBAAW,WAAS;AACpB,eAAS,SAAS,IAAI;AACtB,YAAM,MAAM,QAAQ,IAAE,KAAK;AAC3B,WAAK,MAAM,IAAI,MAAM;AACrB,YAAM,MAAM,IAAI,CAAC,QAAQ,IAAI,KAAK,MAAM,IAAI;AAE5C,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA;AAAA;;;ACvKA;AAAA;AAAA,QAAI,iBAAiB;AACrB,QAAI,mBAAmB;AAEvB,WAAO,UAAU;AAEjB,aAAS,eAAe,SAAQ;AAC/B,WAAK,SAAS,QAAQ;AACtB,WAAK,OAAO,QAAQ;AACpB,WAAK,IAAI,QAAQ;AAAA,IAClB;AAEA,mBAAe,UAAU,cAAc,WAAU;AAChD,UAAI,SAAS,KAAK,OAAO,KAAK,KAAG;AACjC,UAAI,YAAY,KAAK,SAAS,KAAK,KAAG;AACtC,aAAO,IAAI,eAAe;AAAA,QACzB,GAAG,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI,SAAS;AAAA,QACvC,GAAG,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI,SAAS;AAAA,QACvC,GAAG,KAAK,IAAI,IAAI,MAAM;AAAA,MACvB,CAAC;AAAA,IACF;AAEA,mBAAe,UAAU,aAAa,SAAS,WAAU;AACxD,aAAO,KAAK,YAAY,EAAE,WAAW,SAAS;AAAA,IAC/C;AAEA,mBAAe,UAAU,uBAAuB,SAAS,WAAW,OAAM;AACzE,UAAI,GAAG;AACP,UAAI,aAAa,KAAK,IAAI,KAAK,KAAG,MAAM,KAAK,MAAM;AACnD,UAAI,aAAa,KAAK,IAAI,KAAK,KAAG,MAAM,KAAK,MAAM;AAEnD,UAAI,cAAc,CAAC,GAAK,UAAU;AAClC,UAAI,cAAc,CAAC,GAAK,UAAU;AAClC,UAAI,wBAAwB;AAAA,QAC1B,UAAU,KAAG,KAAK,KAAM,UAAU,KAAG,KAAK;AAAA,MAC5C;AAEA,WAAI,IAAI,GAAG,KAAK,OAAO,KAAI;AAC1B,8BAAsB,CAAC,IAAI,sBAAsB,IAAE,CAAC,KAAK,UAAU,KAAG,KAAK;AAAA,MAC5E;AACA,WAAI,IAAI,GAAG,KAAK,OAAO,KAAI;AAC1B,oBAAY,CAAC,IAAI,YAAY,IAAE,CAAC,IAAE,aAAa,YAAY,IAAE,CAAC,IAAE;AAChE,oBAAY,CAAC,IAAI,YAAY,IAAE,CAAC,IAAE,aAAa,YAAY,IAAE,CAAC,IAAE;AAAA,MACjE;AAEA,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,mBAAe,UAAU,sBAAsB,SAAS,OAAO;AAC9D,aAAO,IAAI,iBAAiB,MAAM,KAAK;AAAA,IACxC;AAAA;AAAA;;;ACrDA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,UAAU,SAAS;AACxB,gBAAU,WAAW;AAAA,QACjB,GAAG;AAAA,QACH,GAAG;AAAA,QACH,KAAK,IAAI;AAAA,QACT,IAAI;AAAA,MACR;AAEA,WAAK,IAAI,QAAQ;AACjB,WAAK,IAAI,QAAQ;AACjB,WAAK,MAAM,QAAQ;AACnB,WAAK,KAAK,QAAQ;AAClB,WAAK,MAAM,KAAK,KAAK,IAAG,KAAK,IAAE,KAAK,KAAI,KAAK,IAAE,KAAK,EAAE;AACtD,WAAK,QAAQ,KAAK,MAAI,KAAK;AAAA,IAC/B;AAAA;AAAA;;;AChBA;AAAA;AAAA,QAAI,iBAAiB;AACrB,QAAI,YAAY;AAEhB,WAAO,UAAU;AAEjB,aAAS,cAAc,SAAQ;AAC9B,WAAK,UAAU;AACf,WAAK,SAAS,QAAQ,UAAU,QAAQ;AACxC,WAAK,MAAM,QAAQ,OAAO,QAAQ;AAClC,WAAK,yBAAyB,QAAQ,0BAA0B;AAChE,WAAK,YAAY,QAAQ,aAAa,IAAI,UAAU;AAAA,IACrD;AAEA,kBAAc,UAAU,cAAc,WAAW;AAChD,UAAI,YAAY,KAAK;AACrB,UAAI,SAAS,KAAK,IAAI,KAAK,MAAI,KAAK,KAAG,GAAG;AAC1C,UAAI,SAAS,KAAK,IAAI,KAAK,MAAI,KAAK,KAAG,GAAG;AAC1C,UAAI,KAAK,UAAU,IAAI,KAAK,KAAK,IAAI,UAAU,QAAQ,SAAS,MAAM;AACtE,UAAI,MAAM,KAAK,KAAK,0BAA0B;AAC9C,UAAI,MAAM,MAAM,IAAI,UAAU,SAAS,KAAK,0BAA0B;AACtE,UAAI,IAAI,KAAK,KAAK,KAAG,KAAK,KAAG,EAAE;AAC/B,aAAO,IAAI,eAAe;AAAA,QACzB;AAAA,QACA,MAAM,MAAI,KAAK,KAAG,KAAK,KAAK,KAAK,CAAC;AAAA,QAClC,QAAQ,KAAK;AAAA,MACd,CAAC;AAAA,IACF;AAEA,kBAAc,UAAU,QAAQ,WAAU;AACzC,aAAO,IAAI,cAAc,KAAK,OAAO;AAAA,IACtC;AAAA;AAAA;;;AC9BA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,iBAAiB,SAAQ;AACjC,WAAK,IAAI,QAAQ;AACjB,WAAK,IAAI,QAAQ;AACjB,WAAK,IAAI,QAAQ;AACjB,WAAK,IAAI,QAAQ;AACjB,WAAK,IAAI,QAAQ;AACjB,WAAK,OAAO,QAAQ;AACpB,WAAK,OAAO,QAAQ;AACpB,WAAK,KAAK,QAAQ;AAClB,WAAK,OAAO,QAAQ;AACpB,WAAK,OAAO,QAAQ;AACpB,WAAK,OAAO,QAAQ;AACpB,WAAK,OAAO,QAAQ;AACpB,WAAK,OAAO,QAAQ;AACpB,WAAK,UAAU,QAAQ;AACvB,WAAK,UAAU,QAAQ;AACvB,WAAK,QAAQ,QAAQ;AAAA,IACtB;AAEA,qBAAiB,UAAU,QAAQ,WAAU;AAC5C,aAAO,IAAI,iBAAiB,IAAI;AAAA,IACjC;AAEA,qBAAiB,UAAU,QAAQ,SAAS,QAAO;AAClD,aAAO,IAAI,iBAAiB;AAAA,QAC3B,GAAI,KAAK,IAAI;AAAA,QACb,GAAI,KAAK,IAAI;AAAA,QACb,GAAI,KAAK,IAAI;AAAA,QACb,GAAI,KAAK,IAAI;AAAA,QACb,GAAI,KAAK,IAAI;AAAA,QACb,MAAO,KAAK,OAAO;AAAA,QACnB,MAAO,KAAK,OAAO;AAAA,QACnB,IAAK,KAAK,KAAK;AAAA,QACf,MAAO,KAAK,OAAO;AAAA,QACnB,MAAO,KAAK,OAAO;AAAA,QACnB,MAAO,KAAK,OAAO;AAAA,QACnB,MAAO,KAAK,OAAO;AAAA,QACnB,MAAO,KAAK,OAAO;AAAA,QACnB,SAAU,KAAK,UAAU;AAAA,QACzB,SAAU,KAAK,UAAU;AAAA,QACzB,OAAQ,KAAK,QAAQ;AAAA,MACtB,CAAC;AAAA,IACF;AAEA,qBAAiB,UAAU,WAAW,SAAS,YAAW;AACzD,aAAO,IAAI,iBAAiB;AAAA,QAC3B,GAAI,KAAK,IAAI,WAAW;AAAA,QACxB,GAAI,KAAK,IAAI,WAAW;AAAA,QACxB,GAAI,KAAK,IAAI,WAAW;AAAA,QACxB,GAAI,KAAK,IAAI,WAAW;AAAA,QACxB,GAAI,KAAK,IAAI,WAAW;AAAA,QACxB,MAAO,KAAK,OAAO,WAAW;AAAA,QAC9B,MAAO,KAAK,OAAO,WAAW;AAAA,QAC9B,IAAK,KAAK,KAAK,WAAW;AAAA,QAC1B,MAAO,KAAK,OAAO,WAAW;AAAA,QAC9B,MAAO,KAAK,OAAO,WAAW;AAAA,QAC9B,MAAO,KAAK,OAAO,WAAW;AAAA,QAC9B,MAAO,KAAK,OAAO,WAAW;AAAA,QAC9B,MAAO,KAAK,OAAO,WAAW;AAAA,QAC9B,SAAU,KAAK,UAAU,WAAW;AAAA,QACpC,SAAU,KAAK,UAAU,WAAW;AAAA,QACpC,OAAQ,KAAK,QAAQ,WAAW;AAAA,MACjC,CAAC;AAAA,IACF;AAEA,qBAAiB,wBAAwB,SAAS,iBAAgB;AACjE,UAAI,KAAK,gBAAgB;AACzB,UAAI,KAAK,gBAAgB;AACzB,UAAI,KAAK,gBAAgB;AACzB,UAAI,IAAI,KAAK,KAAK,KAAG,KAAK,KAAG,EAAE;AAC/B,aAAO,IAAI,iBAAiB;AAAA,QAC3B,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH;AAAA,QACA,GAAG,KAAK,KAAK,IAAE,IAAI,KAAG,EAAE;AAAA,QACxB,MAAM,MAAI,KAAK,KAAK,KAAK,MAAM,IAAI,EAAE;AAAA,QACrC,MAAM,MAAI,KAAK,KAAK,KAAK,MAAM,IAAI,CAAC;AAAA,MACrC,CAAC;AAAA,IACF;AAEA,qBAAiB,6BAA6B,SAAS,oBAAmB;AACzE,UAAI,KAAK,mBAAmB;AAC5B,UAAI,KAAK,mBAAmB;AAC5B,UAAI,KAAK,mBAAmB;AAC5B,aAAO,IAAI,iBAAiB;AAAA,QAC3B,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO,KAAK,IAAE,KAAK,KAAK,IAAE,MAAM,KAAK;AAAA,QACrC,OAAO,KAAK,IAAE,KAAK,KAAK,IAAE,KAAK,KAAK,IAAE,MAAM,KAAK;AAAA,QACjD,SAAS,MAAI,KAAK,MAAM,KAAK,IAAE,KAAK,OAAO,KAAK,IAAE,KAAK,SAAS,KAAK,IAAE,KAAK;AAAA,QAC5E,SAAS,MAAI,KAAK,MAAM,KAAK,IAAE,KAAK,OAAO,KAAK,IAAE,KAAK,SAAS,KAAK,IAAE,KAAK;AAAA,QAC5E,OAAO,KAAK;AAAA,MACb,CAAC;AAAA,IACF;AAAA;AAAA;;;ACjGA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,eAAe,SAAQ;AAC/B,WAAK,KAAK,QAAQ;AAClB,WAAK,KAAK,QAAQ;AAClB,WAAK,KAAK,QAAQ;AAAA,IACnB;AAEA,mBAAe,UAAU,SAAS,SAAS,iBAAiB,gBAAgB;AAC3E,UAAI,MAAM,KAAK,KAAG,OAAO,gBAAgB,OAAO,eAAe;AAC/D,aAAO,IAAI,eAAe;AAAA,QACzB,IAAI,KAAK,KAAG,KAAK,IAAI,GAAG,IAAI,KAAK,KAAG,KAAK,IAAI,GAAG;AAAA,QAChD,IAAI,KAAK,KAAG,KAAK,IAAI,GAAG,IAAI,KAAK,KAAG,KAAK,IAAI,GAAG;AAAA,QAChD,IAAI,KAAK;AAAA,MACV,CAAC;AAAA,IACF;AAAA;AAAA;;;ACfA;AAAA;AAAA,QAAI,gBAAgB;AACpB,QAAI,mBAAmB;AACvB,QAAI,iBAAiB;AAErB,WAAO,UAAU;AAEjB,aAAS,MAAM,SAAQ;AACtB,WAAK,QAAQ,QAAQ;AACrB,WAAK,aAAa,IAAI,KAAK,QAAQ,UAAU;AAC7C,WAAK,WAAW,IAAI,KAAK,QAAQ,QAAQ;AACzC,WAAK,OAAO,QAAQ,QAAQ;AAC5B,WAAK,qBAAqB,QAAQ,sBAAsB,CAAC,CAAC;AAC1D,WAAK,qBAAqB,QAAQ,sBAAsB,CAAC,CAAC;AAC1D,WAAK,sBAAsB,QAAQ,uBAAuB,CAAC,CAAC;AAC5D,WAAK,sBAAsB,QAAQ,uBAAuB,CAAC,CAAC;AAC5D,WAAK,QAAQ,QAAQ,SAAS;AAC9B,WAAK,gBAAgB,QAAQ,iBAAiB;AAC9C,WAAK,YAAY,KAAK,SAAO,KAAK,QAAM,KAAG,IAAI,KAAK;AAAA,IACrD;AAEA,UAAM,UAAU,gBAAgB,SAAS,MAAM,wBAAwB,OAAM;AAC5E,UAAI,WAAW,KAAK,eAAe;AACnC,UAAI,mBAAmB,KAAK,QAAQ,IAAI,KAAK,IAAI,QAAQ,MAAM,MAAK,OAAK,KAAG;AAC5E,UAAI,OAAO,WAAW;AACtB,UAAI,QAAQ,OAAO,KAAK;AAExB,UAAG,OAAO,KAAK,cAAc,OAAO,KAAK,UAAS;AACjD,YAAG,uBAAuB;AACzB,kBAAQ,MAAM,8BAA4B,KAAK,WAAW,aAAa,IAAE,SAAO,KAAK,SAAS,aAAa,CAAC;AAAA,QAC7G,OAAO;AACN,gBAAM,IAAI,MAAM,8BAA4B,KAAK,WAAW,aAAa,IAAE,SAAO,KAAK,SAAS,aAAa,CAAC;AAAA,QAC/G;AAAA,MACD;AAEA,UAAI,QAAQ,IAAI,MAAM;AAAA,QACrB,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK;AAAA,QACZ,eAAe,KAAK;AAAA,QACpB,MAAM,KAAK;AAAA,QACX,YAAY,KAAK;AAAA,QACjB,UAAU,KAAK;AAAA,MAChB,CAAC;AACD,UAAI,IAAI,MAAM;AACd,UAAI,IAAI,KAAG,IAAI,KAAG,IAAI;AACtB,eAAQ,IAAI,GAAG,KAAK,KAAK,OAAO,KAAI;AACnC,iBAAQ,IAAI,GAAG,KAAK,GAAG,KAAI;AAC1B,cAAI,IAAI,KAAK,IAAI,KAAG,IAAI;AACxB,cAAI,MAAM,KAAK,mBAAmB,CAAC;AACnC,cAAI,MAAM,KAAK,mBAAmB,CAAC;AACnC,cAAI,OAAO,KAAK,oBAAoB,CAAC;AACrC,cAAI,OAAO,KAAK,oBAAoB,CAAC;AACrC,cAAG,KAAK,GAAE;AACT,kBAAM,mBAAmB,CAAC,IAAI,MAAM,QAAM;AAC1C,kBAAM,mBAAmB,CAAC,IAAI,MAAM,QAAM;AAC1C,kBAAM,oBAAoB,CAAC,IAAI;AAC/B,kBAAM,oBAAoB,CAAC,IAAI;AAAA,UAChC,OAAO;AACN,kBAAM,mBAAmB,CAAC,IAAI;AAC9B,kBAAM,mBAAmB,CAAC,IAAI;AAAA,UAC/B;AAAA,QACD;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAEA,UAAM,UAAU,eAAe,SAAS,UAAU,eAAe,iBAAgB;AAChF,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,GAAG,GAAG,GAAG;AACb,UAAI,wBAAwB,cAAc;AAC1C,UAAI,cAAc,cAAc;AAChC,UAAI,cAAc,cAAc;AAChC,UAAI,IAAI,KAAK;AACb,UAAI,IAAI,KAAK;AAEb,WAAI,IAAI,GAAG,KAAK,KAAK,OAAO,KAAI;AAC/B,aAAI,IAAI,GAAG,KAAK,GAAG,KAAI;AACtB,cAAI,KAAG,IAAE,KAAG,IAAI;AAChB,gBAAM,sBAAsB,CAAC,KAC3B,EAAE,CAAC,IAAE,YAAY,CAAC,IAAI,EAAE,CAAC,IAAE,YAAY,CAAC,MACxC,IAAE,KAAK,SAAS,KAAK,CAAC;AACxB,gBAAM,sBAAsB,CAAC,KAC3B,EAAE,CAAC,IAAE,YAAY,CAAC,IAAI,EAAE,CAAC,IAAE,YAAY,CAAC,KACxC,IAAK,SAAS,KAAK,CAAC;AACtB,gBAAM,sBAAsB,CAAC,KAC3B,EAAE,CAAC,IAAE,YAAY,CAAC,IAAI,EAAE,CAAC,IAAE,YAAY,CAAC,KACzC,SAAS,MAAM,CAAC;AAAA,QAClB;AAAA,MACD;AACA,UAAI,UAAU,KAAK,IAAI,KAAK,KAAG,MAAM,gBAAgB,IAAI;AACzD,UAAG,KAAK,IAAI,OAAO,IAAI,OAAM;AAC5B,aAAK,KAAK;AAAA,MACX,OAAO;AAEN,aAAK;AACL,YAAI,sBAAsB,GAAK,qBAAqB;AACpD,YAAI,SAAS,CAAC,CAAC;AACf,YAAI,UAAU,KAAK,IAAI,KAAK,KAAG,MAAM,gBAAgB,IAAI;AAEzD,aAAI,IAAI,GAAG,KAAK,KAAK,OAAO,KAAI;AAC/B,cAAI,KAAG,IAAE,KAAG,IAAI;AAChB,gCAAsB,uBAAuB,IAAE,IAAE,KAAK;AACtD,gCAAsB,sBAAsB,KAAK,KAAK,IAAE,KAAG,IAAE,EAAE;AAC/D,gCAAsB;AACtB,cAAG,KAAK,GAAE;AACT,mBAAO,CAAC,IAAI,OAAO,IAAE,CAAC;AAAA,UACvB,OAAO;AACN,kBAAM,IAAE,MAAI,IAAE,KAAK,OAAO,IAAE,IAAE,MAAI,IAAE,IAAE;AACtC,mBAAO,CAAC,IAAI,UAAU,OAAO,IAAE,CAAC,IAAI,IAAE,OAAO,IAAE,CAAC;AAAA,UACjD;AACA,gBAAM,sBAAsB,CAAC,KAC3B,EAAE,CAAC,IAAE,YAAY,CAAC,IAAI,EAAE,CAAC,IAAE,YAAY,CAAC,KACzC,OAAO,CAAC,IAAI;AAAA,QACd;AAAA,MACD;AACA,aAAO,IAAI,eAAe;AAAA,QACzB;AAAA,QAAQ;AAAA,QAAQ;AAAA,MACjB,CAAC;AAAA,IACF;AAEA,UAAM,UAAU,QAAQ,SAAS,QAAQ;AAExC,UAAI,WAAY,OAAO,SAAS,KAAK,OAAO,OAAO,CAAC,MAAM,WAAY,OAAO,CAAC,IAAI;AAElF,UAAI,iBAAiB,IAAI,cAAc;AAAA,QACtC,KAAK,OAAO,CAAC;AAAA,QACb,KAAK,OAAO,CAAC;AAAA,QACb,wBAAwB;AAAA,MACzB,CAAC;AACD,UAAI,kBAAkB,eAAe,YAAY;AAEjD,UAAI,WAAW,gBAAgB,oBAAoB,KAAK,KAAK;AAC7D,UAAI,qBAAqB,gBAAgB,qBAAqB,eAAe,WAAW,KAAK,KAAK;AAElG,UAAI,sBAAsB,KAAK,aAAa,UAAU,oBAAoB,eAAe;AACzF,UAAI,sBAAsB,oBAAoB,OAAO,iBAAiB,cAAc;AAEpF,aAAO,iBAAiB,sBAAsB,mBAAmB;AAAA,IAClE;AAAA;AAAA;;;AC3IA;AAAA;AAAA;AAAA,MACE,oBAAsB;AAAA,QACpoBAAsB;AAAA,QACpqBAAuB;AAAA,QACrqBAAuB;AAAA,QACreAAiB;AAAA,MACjB,OAAS;AAAA,MACT,MAAQ;AAAA,MACR,YAAc;AAAA,MACd,UAAY;AAAA,IACd;AAAA;AAAA;;;AC3XA;AAAA;AAAA;AAAA,MACE,oBAAsB;AAAA,QACpoBAAsB;AAAA,QACpqBAAuB;AAAA,QACrqBAAuB;AAAA,QACreAAiB;AAAA,MACjB,OAAS;AAAA,MACT,MAAQ;AAAA,MACR,YAAc;AAAA,MACd,UAAY;AAAA,IACd;AAAA;AAAA;;;AC3XA;AAAA;AAAA;AAAA,MACE,oBAAsB;AAAA,QACpoBAAsB;AAAA,QACpqBAAuB;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,qBAAuB;AAAA,QACreAAiB;AAAA,MACjB,OAAS;AAAA,MACT,MAAQ;AAAA,MACR,YAAc;AAAA,MACd,UAAY;AAAA,IACd;AAAA;AAAA;;;AC3XA;AAAA;AAAA;AAAA,MACE,oBAAsB;AAAA,QACpoBAAsB;AAAA,QACpqBAAuB;AAAA,QACrqBAAuB;AAAA,QACreAAiB;AAAA,MACjB,OAAS;AAAA,MACT,MAAQ;AAAA,MACR,YAAc;AAAA,MACd,UAAY;AAAA,IACd;AAAA;AAAA;;;AC3XA;AAAA;AAAA,QAAM,QAAQ;AACd,QAAM,eAAe,OAAO,UAAU,CAAC;AAEvC,QAAM,YAAY;AAAA,MACjB;AAAA,QACC,MAAM;AAAA,QACN,WAAW,oBAAI,KAAK,0BAA0B;AAAA,QAC9C,SAAS,oBAAI,KAAK,0BAA0B;AAAA,MAC7C;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,WAAW,oBAAI,KAAK,0BAA0B;AAAA,QAC9C,SAAS,oBAAI,KAAK,0BAA0B;AAAA,MAC7C;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,WAAW,oBAAI,KAAK,0BAA0B;AAAA,QAC9C,SAAS,oBAAI,KAAK,0BAA0B;AAAA,MAC7C;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,WAAW,oBAAI,KAAK,0BAA0B;AAAA,QAC9C,SAAS,oBAAI,KAAK,0BAA0B;AAAA,MAC7C;AAAA,IACD;AAGA,iBAAa,QAAQ,SAAU,MAAM,UAAU,CAAC,GAAG;AAClD,aAAO,QAAQ,oBAAI,KAAK;AACxB,YAAM,KAAK,KAAK,QAAQ;AAExB,YAAM,wBAAyB,WAAW,QAAQ,yBAA0B;AAG5E,UAAI,oBAAoB,UAAU,KAAK,CAAC,UAAU;AACjD,eAAO,MAAM,MAAM,UAAU,QAAQ,KAAK,MAAM,MAAM,QAAQ,QAAQ;AAAA,MACvE,CAAC;AAGD,UAAI,CAAC,qBAAqB,KAAK,UAAU,UAAU,SAAS,CAAC,EAAE,UAAU,QAAQ,GAAG;AACnF,4BAAoB,UAAU,UAAU,SAAS,CAAC;AAAA,MACnD,WAAW,CAAC,qBAAqB,KAAK,UAAU,CAAC,EAAE,QAAQ,QAAQ,GAAG;AACrE,4BAAoB,UAAU,CAAC;AAAA,MAChC;AAGA,UAAI,CAAC,mBAAmB;AACvB,4BAAoB,UAAU,CAAC;AAAA,MAChC;AAEA,YAAM,gBAAgB,IAAI,MAAM,kBAAkB,IAAI;AAEtD,aAAO,cAAc,cAAc,MAAM,qBAAqB;AAAA,IAC/D;AAAA;AAAA;",
  "names": []
}
